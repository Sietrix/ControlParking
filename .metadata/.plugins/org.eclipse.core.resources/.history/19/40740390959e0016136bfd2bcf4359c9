import java.net.Socket;
import java.io.*;

public class HiloHTTP extends Thread {
	private Socket skCliente;
	private String IpController;
	private String PuertoController;
	
	public HiloHTTP(Socket p_cliente, String IpController, String PuertoController) {
		this.skCliente = p_cliente;
		this.IpController = IpController;
		this.PuertoController = PuertoController;
	}
	
	public String leeSocket(Socket p_sk, String p_Datos) {
		try {
			//Lectura caracter a caracter
			InputStream aux = p_sk.getInputStream();
			BufferedReader flujo = new BufferedReader(new InputStreamReader(aux));
			p_Datos = new String();
			p_Datos = flujo.readLine();
		} catch(Exception e) {
			System.out.println("Error leyendo del socket: " + e.toString());
		}
		return p_Datos;
	}

	public void escribeSocket(Socket p_sk, String p_Datos) {
		try {
			OutputStream aux = p_sk.getOutputStream();
			PrintWriter flujo = new PrintWriter(new OutputStreamWriter(aux));
			flujo.println(p_Datos);
			flujo.flush(); //Limpieza del Buffer
		} catch(Exception e) {
			System.out.println("Error escribiendo en el socket: " + e.toString());
		}
	}
	
	public String leerArchivo(String s) {
		String lectura = "";
		File fichero = new File(System.getProperty("user.dir") + s); //Obtiene la ruta del fichero
		try {
			FileReader fr = new FileReader(fichero);
			BufferedReader br = new BufferedReader(fr);
			String linea = "";
			while((linea = br.readLine()) != null) {
				lectura += linea;
			}
			fr.close();
			br.close();
			String aux = lectura;
		} catch(Exception e) {
			lectura = "";
			lectura = "HTTP/1.1 404 File not found\r\n" + "Content-Type: text/html\r\n" + "\r\n\r\n" + leerArchivo("/404.html");
		}
		
		return lectura;
	}
}
